// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SailTracker.Data.Context;

#nullable disable

namespace SailTracker.Data.Migrations
{
    [DbContext(typeof(SailTrackerDbContext))]
    partial class SailTrackerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SailTracker.Data.Entities.SettingEntity", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<DateTime>("CreatedDate")
                    .HasColumnType("datetime2");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("bit");

                b.Property<bool>("MaintenanceMode")
                    .HasColumnType("bit"); // Yazım hatası düzeltildi

                b.Property<DateTime?>("ModifiedDate")
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.ToTable("Settings");

                b.HasData(
                    new
                    {
                        Id = 1,
                        CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                        IsDeleted = false,
                        MaintenanceMode = false // Yazım hatası düzeltildi
                    });
            });

            modelBuilder.Entity("SailTracker.Data.Entities.VesselEntity", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<int>("VesselType")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedDate")
                    .HasColumnType("datetime2");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("bit");

                b.Property<string>("HullModel")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime?>("ModifiedDate")
                    .HasColumnType("datetime2");

                b.Property<string>("VesselName")
                    .IsRequired()
                    .HasMaxLength(80)
                    .HasColumnType("nvarchar(80)");

                b.Property<int>("EstimatedValue")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.ToTable("Vessels");
            });

            modelBuilder.Entity("SailTracker.Data.Entities.VesselFeatureEntity", b =>
            {
                b.Property<int>("VesselId")
                    .HasColumnType("int");

                b.Property<int>("NavigationFeatureId")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedDate")
                    .HasColumnType("datetime2");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("bit");

                b.Property<DateTime?>("ModifiedDate")
                    .HasColumnType("datetime2");

                b.HasKey("VesselId", "NavigationFeatureId");

                b.HasIndex("NavigationFeatureId");

                b.ToTable("VesselFeatures");
            });

            modelBuilder.Entity("SailTracker.Data.Entities.NavigationFeatureEntity", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<DateTime>("CreatedDate")
                    .HasColumnType("datetime2");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("bit");

                b.Property<DateTime?>("ModifiedDate")
                    .HasColumnType("datetime2");

                b.Property<string>("FeatureName")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("NavigationFeatures");
            });

            modelBuilder.Entity("SailTracker.Data.Entities.SalesEntity", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<int>("VesselId")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedDate")
                    .HasColumnType("datetime2");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("bit");

                b.Property<DateTime?>("ModifiedDate")
                    .HasColumnType("datetime2");

                b.Property<DateTime>("SellDate")
                    .HasColumnType("datetime2");

                b.Property<int>("UserId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("VesselId");

                b.HasIndex("UserId");

                b.ToTable("Sales");
            });

            modelBuilder.Entity("SailTracker.Data.Entities.UserEntity", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<DateTime>("BirthDate")
                    .HasColumnType("datetime2");

                b.Property<DateTime>("CreatedDate")
                    .HasColumnType("datetime2");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("FirstName")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)"); // Yazım hatası düzeltildi

                b.Property<bool>("IsDeleted")
                    .HasColumnType("bit");

                b.Property<string>("LastName")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<DateTime?>("ModifiedDate")
                    .HasColumnType("datetime2");

                b.Property<string>("Password")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("UserType")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.ToTable("Users");
            });

            modelBuilder.Entity("SailTracker.Data.Entities.VesselFeatureEntity", b =>
            {
                b.HasOne("SailTracker.Data.Entities.VesselEntity", "Vessel")
                    .WithMany("VesselFeatures")
                    .HasForeignKey("VesselId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("SailTracker.Data.Entities.NavigationFeatureEntity", "NavigationFeature")
                    .WithMany("VesselFeatures")
                    .HasForeignKey("NavigationFeatureId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Vessel");

                b.Navigation("NavigationFeature");
            });

            modelBuilder.Entity("SailTracker.Data.Entities.SalesEntity", b =>
            {
                b.HasOne("SailTracker.Data.Entities.VesselEntity", "Vessel")
                    .WithMany("Sales")
                    .HasForeignKey("VesselId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("SailTracker.Data.Entities.UserEntity", "User")
                    .WithMany("Sales")
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Vessel");

                b.Navigation("User");
            });

            modelBuilder.Entity("SailTracker.Data.Entities.VesselEntity", b =>
            {
                b.Navigation("VesselFeatures");

                b.Navigation("Sales");
            });

            modelBuilder.Entity("SailTracker.Data.Entities.NavigationFeatureEntity", b =>
            {
                b.Navigation("VesselFeatures");
            });

            modelBuilder.Entity("SailTracker.Data.Entities.UserEntity", b =>
            {
                b.Navigation("Sales");
            });
#pragma warning restore 612, 618
        }
    }
}
